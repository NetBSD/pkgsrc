# $NetBSD: pbulk.conf,v 1.25 2020/01/12 23:35:01 joerg Exp $

# Version of the configuration file. This is bumped whenever the default
# config changes to notify the administrator about updates.
#
config_version=@PBULK_CONFIG_VERSION@

# The URL where the build report will be made available. This is only
# used in the .txt version of the report.
#
base_url=http://www.pkgsrc-box.org/reports/current/DragonFly-1.8

# If yes, keep the last scan results in ${bulklog}.old and try to reuse them.
reuse_scan_results=no

# The pbulk framework can use multiple machines to build the packages.
# On a single-processor, non-distributed build, you may want to say "no"
# here.
#
master_mode=yes

master_ip=192.168.75.10
scan_clients="192.168.75.21 192.168.75.22 192.168.75.23 192.168.75.24"
build_clients="192.168.75.21 192.168.75.22 192.168.75.23 192.168.75.24"

master_port_scan=${master_ip}:2001
master_port_build=${master_ip}:2002

# Some flags for the programs that publish the binary packages and the
# build report. If you want to disable the publishing at all, see below.
#
pkg_rsync_args="-av --delete-excluded -e ssh"
pkg_rsync_target="pkgsrc@192.168.75.1:/public/packages/current/DragonFly-1.8"
report_rsync_args="-avz --delete-excluded -e ssh"
report_rsync_target="pkgsrc@192.168.75.1:/public/reports/current/DragonFly-1.8"
report_subject_prefix="pkgsrc"
report_recipients="pkgsrc-bulk@netbsd.org"

# An archive containing the pkgsrc binary tree after bootstrapping.
#
bootstrapkit=/usr/pkgsrc/bootstrap/bootstrap.tar.gz

# Optionally build a subset of the available packages and their dependencies.
# The file is a newline separated list of package locations (e.g. lang/perl5).
#limited_list=/limited_list

# Optionally ignore unresolvable dependencies for a full build (e.g.
# a build without limited_list set).  Default behavior is to bail out.
#
ignore_missing_dependencies=no

# If yes, consider a package up-to-date, if the dependency list matches
# the existing binary package and the recorded RCS IDs match the pkgsrc
# tree. Otherwise, additionally require that the package is not older
# than any of the dependencies.
#
skip_age_check=no

report_graph_script_limit=512

# Account used for user-destdir builds. This account should have
# no special permissions.
#
unprivileged_user=pbulk

# If yes, run the checksum phase as unprivileged user.
# Note: requires DISTDIR to be writeable for the unprivileged user.
use_unprivileged_checksum=no

# Variables used for the optional cross-compiling of packages.
#
cross_compile=no
target_arch=vax
target_destdir=/usr/src/destdir.${target_arch}

# The directories where the various files are created.
#
bulklog=/bulklog
packages=/packages
prefix=/usr/pkg
pkgsrc=/usr/pkgsrc
pkgdb=/var/db/pkg
varbase=/var

# The following programs must NOT be inside ${prefix}
pkg_add=@PKG_ADD_CMD@
pkg_admin=@PKG_ADMIN_CMD@
pkg_delete=@PKG_DELETE_CMD@
pkg_info=@PKG_INFO_CMD@

# The tools that are used for building the packages. If you do not want
# to publish anything at all, set rsync=: and mail=:.
#
bzip2=@BZIP2@
digest=@DIGEST@
gzip="@GZIP_CMD@"
# On non-NetBSD, this should usually point at the bmake in ${prefix}, not the
# make used to build pbulk itself.
make=@TARGET_MAKE@
mail=@MAIL_CMD@
neato=@NEATO@
rsync=@PREFIX@/bin/rsync
sed=@SED@
tar=@TAR@

loc=${bulklog}/meta

pbuild=@PREFIX@/bin/pbulk-build
presolve=@PREFIX@/bin/pbulk-resolve
pscan=@PREFIX@/bin/pbulk-scan

# When a package build fails, it is often necessary to have a look at
# the working directory or the installed files. When these options are
# set to "yes", they will be archived in the log directory.
#
keep_wrkdir=no
keep_prefix=no

client_prepare=@PREFIX@/libexec/pbulk/client-prepare
client_prepare_action=@PREFIX@/libexec/pbulk/client-clean
client_prepare_chroot=:
pkg_up_to_date_script=@PREFIX@/libexec/pbulk/pkg-up-to-date
pbuild_script=@PREFIX@/libexec/pbulk/pkg-build
pbuild_start_script=@PREFIX@/libexec/pbulk/build-client-start
pscan_start_script=@PREFIX@/libexec/pbulk/scan-client-start
report_script=@PREFIX@/libexec/pbulk/create-report
report_html_script=@PREFIX@/libexec/pbulk/create-report-html
report_txt_script=@PREFIX@/libexec/pbulk/create-report-txt
report_graph_script=@PREFIX@/libexec/pbulk/create-broken-graph
packages_script=@PREFIX@/libexec/pbulk/compute-packages

script_phase_pre_build=@PREFIX@/libexec/pbulk/pre-build
script_phase_build=@PREFIX@/libexec/pbulk/build
script_phase_report=@PREFIX@/libexec/pbulk/report
script_phase_scan=@PREFIX@/libexec/pbulk/scan
script_phase_upload=@PREFIX@/libexec/pbulk/upload

# Arguments are buildlog and pkgname
sync_buildlog=:
# Arguments are path to the temporary package file, the package name
# and categories.  The default handler just copies the file to ${packages}.
sync_package=default_sync_package
# PKG_SUFX as set in mk.conf
pkg_sufx=.tgz
