$NetBSD: patch-aj,v 1.5 2022/06/06 05:11:58 dholland Exp $

- remove panic declaration (XXX: why?)
- update for newer tcl

--- libdesk/tixImgXpm.c.orig	2022-06-06 01:40:39.166611462 +0000
+++ libdesk/tixImgXpm.c
@@ -58,8 +58,6 @@
 #include "tkPort.h"*/
 /*#include <tix.h>*/
 
-EXTERN void		panic();
-
 /* constants used only in this file */
 
 #define XPM_MONO		1
@@ -151,7 +149,7 @@ typedef struct PixmapInstance {
  */
 
 static int		ImgXpmCreate _ANSI_ARGS_((Tcl_Interp *interp,
-			    char *name, int argc, char **argv,
+			    char *name, int objc, Tcl_Obj *CONST objv[],
 			    Tk_ImageType *typePtr, Tk_ImageMaster master,
 			    ClientData *clientDataPtr));
 static ClientData	ImgXpmGet _ANSI_ARGS_((Tk_Window tkwin,
@@ -239,12 +237,12 @@ static int xpmTableInited = 0;
  *----------------------------------------------------------------------
  */
 static int
-ImgXpmCreate(interp, name, argc, argv, typePtr, master, clientDataPtr)
+ImgXpmCreate(interp, name, objc, objv, typePtr, master, clientDataPtr)
     Tcl_Interp *interp;		/* Interpreter for application containing
 				 * image. */
     char *name;			/* Name to use for image. */
-    int argc;			/* Number of arguments. */
-    char **argv;		/* Argument strings for options (doesn't
+    int objc;			/* Number of arguments. */
+    Tcl_Obj *CONST objv[];		/* Argument strings for options (doesn't
 				 * include image name or type). */
     Tk_ImageType *typePtr;	/* Pointer to our type record (not used). */
     Tk_ImageMaster master;	/* Token for image, to be used by us in
@@ -254,6 +252,13 @@ ImgXpmCreate(interp, name, argc, argv, t
 {
     PixmapMaster *masterPtr;
 
+    int i;
+    char **argv = (char **) Tcl_Alloc(objc * sizeof(char*));
+    for (i=0; i < objc; i++) {
+
+      argv[i] = Tcl_GetString(objv[i]);
+    }
+
     masterPtr = (PixmapMaster *) ckalloc(sizeof(PixmapMaster));
     masterPtr->tkMaster = master;
     masterPtr->interp = interp;
@@ -267,10 +272,11 @@ ImgXpmCreate(interp, name, argc, argv, t
     masterPtr->isDataAlloced = 0;
     masterPtr->instancePtr = NULL;
 
-    if (ImgXpmConfigureMaster(masterPtr, argc, argv, 0) != TCL_OK) {
+    if (ImgXpmConfigureMaster(masterPtr, objc, argv, 0) != TCL_OK) {
 	ImgXpmDelete((ClientData) masterPtr);
 	return TCL_ERROR;
     }
+    Tcl_Free((char *) argv);
     *clientDataPtr = (ClientData) masterPtr;
     return TCL_OK;
 }
@@ -1152,9 +1158,11 @@ ImgXpmCmd(clientData, interp, argc, argv
     size_t length;
 
     if (argc < 2) {
-	sprintf(interp->result,
+	char buf[128];
+	snprintf(buf, sizeof(buf),
 	    "wrong # args: should be \"%.50s option ?arg arg ...?\"",
 	    argv[0]);
+	Tcl_SetResult(interp, buf, TCL_VOLATILE);
 	return TCL_ERROR;
     }
     c = argv[1][0];
