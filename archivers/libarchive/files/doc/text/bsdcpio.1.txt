4mCPIO24m(1)			 General Commands Manual		    4mCPIO24m(1)

1mNAME0m
       cpio — copy files to and from archives

1mSYNOPSIS0m
       1mcpio -i 22m[4moptions24m] [4mpattern24m 4m...24m] [4m<24m 4marchive24m]
       1mcpio -o 22m[4moptions24m] 4m<24m 4mname-list24m [4m>24m 4marchive24m]
       1mcpio -p 22m[4moptions24m] 4mdest-dir24m 4m<24m 4mname-list0m

1mDESCRIPTION0m
       1mcpio  22mcopies  files between archives and directories.  This implementa‐
       tion can extract from tar, pax, cpio, zip, jar, ar, and ISO 9660	 cdrom
       images and can create tar, pax, cpio, ar, and shar archives.

       The first option to 1mcpio 22mis a mode indicator from the following list:
       1m-i	 22mInput.  Read an archive from standard input (unless overridden)
	       and extract the contents to disk or (if the 1m-t 22moption is speci‐
	       fied)  list  the	 contents  to standard output.	If one or more
	       file patterns are specified, only files	matching  one  of  the
	       patterns will be extracted.
       1m-o	 22mOutput.   Read a list of filenames from standard input and pro‐
	       duce a new archive on standard output (unless overridden)  con‐
	       taining the specified items.
       1m-p	 22mPass-through.  Read a list of filenames from standard input and
	       copy the files to the specified directory.

1mOPTIONS0m
       Unless specifically stated otherwise, options are applicable in all op‐
       erating modes.

       1m-022m, 1m--null0m
	       Read filenames separated by NUL characters instead of newlines.
	       This is necessary if any of the filenames being read might con‐
	       tain newlines.

       1m-622m, 1m--pwb0m
	       When  reading  a binary format archive, assume it's the earlier
	       one, from the PWB variant of 6th Edition UNIX.  When writing  a
	       cpio archive, use the PWB format.

       1m-722m, 1m--binary0m
	       (o mode only) When writing a cpio archive, use the (newer, non-
	       PWB) binary format.

       1m-A	 22m(o mode only) Append to the specified archive.  (Not yet imple‐
	       mented.)

       1m-a	 22m(o	and  p	modes)	Reset  access times on files after they are
	       read.

       1m-B	 22m(o mode only) Block output to records of 5120 bytes.

       1m-C 4m22msize0m
	       (o mode only) Block output to records of 4msize24m bytes.

       1m-c	 22m(o mode only) Use the  old	POSIX  portable	 character  format.
	       Equivalent to 1m--format 4m22modc24m.

       1m-d22m, 1m--make-directories0m
	       (i and p modes) Create directories as necessary.

       1m-E 4m22mfile0m
	       (i mode only) Read list of file name patterns from 4mfile24m to list
	       and extract.

       1m-F 4m22mfile24m, 1m--file 4m22mfile0m
	       Read archive from or write archive to 4mfile24m.

       1m-f 4m22mpattern0m
	       (i mode only) Ignore files that match 4mpattern24m.

       1m-H 4m22mformat24m, 1m--format 4m22mformat0m
	       (o  mode only) Produce the output archive in the specified for‐
	       mat.  Supported formats include:

	       4mcpio24m     Synonym for 4modc24m.
	       4mnewc24m     The SVR4 portable cpio format.
	       4modc24m	     The old POSIX.1 portable octet-oriented cpio format.
	       4mpax24m	     The POSIX.1 pax format, an extension of the ustar for‐
			mat.
	       4mustar24m    The POSIX.1 tar format.

	       The default format is 4modc24m.	See 4mlibarchive-formats24m(5) for  more
	       complete	 information  about the formats currently supported by
	       the underlying 4mlibarchive24m(3) library.

       1m-h22m, 1m--help0m
	       Print usage information.

       1m-I 4m22mfile0m
	       Read archive from 4mfile24m.

       1m-i22m, 1m--extract0m
	       Input mode.  See above for description.

       1m--insecure0m
	       (i and p mode only) Disable security checks  during  extraction
	       or  copying.   This  allows  extraction via symbolic links, ab‐
	       solute paths, and path names containing ‘..’ in the name.

       1m-J22m, 1m--xz0m
	       (o mode only) Compress the file with xz-compatible  compression
	       before  writing	it.  In input mode, this option is ignored; xz
	       compression is recognized automatically on input.

       1m-j	 22mSynonym for 1m-y22m.

       1m-L	 22m(o and p modes) All symbolic links will be followed.  Normally,
	       symbolic links are archived and copied as symbolic links.  With
	       this option, the target of the link will be archived or	copied
	       instead.

       1m-l22m, 1m--link0m
	       (p  mode	 only)	Create	links from the target directory to the
	       original files, instead of copying.

       1m--lrzip0m
	       (o mode only) Compress the resulting archive with 4mlrzip24m(1).	 In
	       input mode, this option is ignored.

       1m--lz4	 22m(o mode only) Compress the archive with lz4-compatible compres‐
	       sion before writing it.	In input mode, this option is ignored;
	       lz4 compression is recognized automatically on input.

       1m--zstd	 22m(o mode only) Compress the archive	with  zstd-compatible  com‐
	       pression	 before writing it.  In input mode, this option is ig‐
	       nored; zstd compression is recognized automatically on input.

       1m--lzma	 22m(o mode only) Compress the file with  lzma-compatible  compres‐
	       sion before writing it.	In input mode, this option is ignored;
	       lzma compression is recognized automatically on input.

       1m--lzop	 22m(o	mode only) Compress the resulting archive with 4mlzop24m(1).  In
	       input mode, this option is ignored.

       1m--passphrase 4m22mpassphrase0m
	       The 4mpassphrase24m is  used  to	 extract  or  create  an  encrypted
	       archive.	  Currently, zip is only a format that 1mcpio 22mcan handle
	       encrypted archives.  You shouldn't use this option  unless  you
	       realize how insecure use of this option is.

       1m-m22m, 1m--preserve-modification-time0m
	       (i  and p modes) Set file modification time on created files to
	       match those in the source.

       1m-n22m, 1m--numeric-uid-gid0m
	       (i mode, only with 1m-t22m) Display numeric uid	and  gid.   By	de‐
	       fault,  1mcpio  22mdisplays  the	 user and group names when they are
	       provided in the archive, or looks up the user and  group	 names
	       in the system password database.

       1m--no-preserve-owner0m
	       (i  mode	 only) Do not attempt to restore file ownership.  This
	       is the default when run by non-root users.

       1m-O 4m22mfile0m
	       Write archive to 4mfile24m.

       1m-o22m, 1m--create0m
	       Output mode.  See above for description.

       1m-p22m, 1m--pass-through0m
	       Pass-through mode.  See above for description.

       1m--preserve-owner0m
	       (i mode only) Restore file ownership.  This is the default when
	       run by the root user.

       1m--quiet0m
	       Suppress unnecessary messages.

       1m-R 22m[user][:][group], 1m--owner 22m[user][:][group]
	       Set the owner and/or group on files in the output.  If group is
	       specified with no user (for example, 1m-R 4m22m:wheel24m) then the  group
	       will  be set but not the user.  If the user is specified with a
	       trailing colon and no group (for example, 1m-R  4m22mroot:24m)  then  the
	       group  will be set to the user's default group.	If the user is
	       specified with no trailing colon, then the user will be set but
	       not the group.  In 1m-i 22mand 1m-p 22mmodes, this  option  can	only  be
	       used  by	 the  super-user.  (For compatibility, a period can be
	       used in place of the colon.)

       1m-r	 22m(All modes.)  Rename files interactively.	For  each  file,  a
	       prompt  is  written to 4m/dev/tty24m containing the name of the file
	       and a line is read from 4m/dev/tty24m.  If the line read	 is  blank,
	       the file is skipped.  If the line contains a single period, the
	       file is processed normally.  Otherwise, the line is taken to be
	       the new name of the file.

       1m-t22m, 1m--list0m
	       (i  mode	 only)	List the contents of the archive to stdout; do
	       not restore the contents to disk.

       1m-u22m, 1m--unconditional0m
	       (i and p modes) Unconditionally overwrite existing files.   Or‐
	       dinarily,  an  older  file  will	 not overwrite a newer file on
	       disk.

       1m-V22m, 1m--dot0m
	       Print a dot to stderr for each file as it is processed.	Super‐
	       seded by 1m-v22m.

       1m-v22m, 1m--verbose0m
	       Print the name of each file to stderr as it is processed.  With
	       1m-t22m, provide a detailed listing of each file.

       1m--version0m
	       Print the program version information and exit.

       1m-y	 22m(o mode only) Compress the archive with  bzip2-compatible  com‐
	       pression	 before writing it.  In input mode, this option is ig‐
	       nored; bzip2 compression is recognized automatically on input.

       1m-Z	 22m(o mode only) Compress  the	 archive  with	compress-compatible
	       compression  before  writing it.	 In input mode, this option is
	       ignored; compression is recognized automatically on input.

       1m-z	 22m(o mode only) Compress the archive	with  gzip-compatible  com‐
	       pression	 before writing it.  In input mode, this option is ig‐
	       nored; gzip compression is recognized automatically on input.

1mEXIT STATUS0m
       The 1mcpio 22mutility exits 0 on success, and >0 if an error occurs.

1mENVIRONMENT0m
       The following environment variables affect the execution of 1mcpio22m:

       LANG	  The locale to use.  See 4menviron24m(7) for more information.

       TZ	  The timezone to use when displaying dates.   See  4menviron24m(7)
		  for more information.

1mEXAMPLES0m
       The 1mcpio 22mcommand is traditionally used to copy file hierarchies in con‐
       junction	 with  the  4mfind24m(1)  command.   The  first example here simply
       copies all files from 4msrc24m to 4mdest24m:
	     1mfind 4m22msrc24m | 1mcpio -pmud 4m22mdest0m

       By carefully selecting options to the 4mfind24m(1) command and combining	 it
       with  other  standard  utilities,  it is possible to exercise very fine
       control over which files are copied.  This next	example	 copies	 files
       from  4msrc24m to 4mdest24m that are more than 2 days old and whose names match a
       particular pattern:
	     1mfind 4m22msrc24m 1m-mtime 4m22m+224m | 1mgrep foo[bar] 22m| 1mcpio -pdmu 4m22mdest0m

       This example copies files from 4msrc24m to 4mdest24m that are more  than	 2  days
       old and which contain the word “foobar”:
	     1mfind 4m22msrc24m 1m-mtime 4m22m+224m | 1mxargs grep -l foobar 22m| 1mcpio -pdmu 4m22mdest0m

1mCOMPATIBILITY0m
       The mode options i, o, and p and the options a, B, c, d, f, l, m, r, t,
       u, and v comply with SUSv2.

       The old POSIX.1 standard specified that only 1m-i22m, 1m-o22m, and 1m-p 22mwere inter‐
       preted  as command-line options.	 Each took a single argument of a list
       of modifier characters.	For example, the standard syntax  allows  1m-imu0m
       but does not support 1m-miu 22mor 1m-i -m -u22m, since 4mm24m and 4mu24m are only modifiers
       to  1m-i22m, they are not command-line options in their own right.  The syn‐
       tax supported by this implementation is backwards-compatible  with  the
       standard.   For	best compatibility, scripts should limit themselves to
       the standard syntax.

1mSEE ALSO0m
       4mbzip224m(1),  4mgzip24m(1),  4mmt24m(1),  4mpax24m(1),	 4mtar24m(1),  4mlibarchive24m(3),  4mcpio24m(5),
       4mlibarchive-formats24m(5), 4mtar24m(5)

1mSTANDARDS0m
       There is no current POSIX standard for the cpio command; it appeared in
       ISO/IEC	 9945-1:1996   (“POSIX.1”)  but	 was  dropped  from  IEEE  Std
       1003.1-2001 (“POSIX.1”).

       The cpio, ustar, and pax interchange file formats are defined  by  IEEE
       Std 1003.1-2001 (“POSIX.1”) for the pax command.

1mHISTORY0m
       The  original 1mcpio 22mand 1mfind 22mutilities were written by Dick Haight while
       working in AT&T's Unix Support Group.  They first appeared in  1977  in
       PWB/UNIX	 1.0,  the  “Programmer's Work Bench” system developed for use
       within AT&T.  They were first released outside of AT&T as part of  Sys‐
       tem  III	 Unix  in 1981.	 As a result, 1mcpio 22mactually predates 1mtar22m, even
       though it was not well-known outside of AT&T until some time later.

       This is a complete re-implementation based  on  the  4mlibarchive24m(3)	li‐
       brary.

1mBUGS0m
       The  cpio  archive  format  has	several basic limitations: It does not
       store user and group names, only numbers.  As a result,	it  cannot  be
       reliably	 used  to  transfer files between systems with dissimilar user
       and group numbering.  Older cpio formats limit the user and group  num‐
       bers  to	 16 or 18 bits, which is insufficient for modern systems.  The
       cpio archive formats cannot support files over 4 gigabytes, except  for
       the “odc” variant, which can support files up to 8 gigabytes.

Debian			      September 16, 2014		       4mCPIO24m(1)
