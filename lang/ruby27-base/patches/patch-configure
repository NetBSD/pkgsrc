$NetBSD: patch-configure,v 1.3 2022/11/26 13:09:58 taca Exp $

* Adding Interix support.
* Ignore doxygen.
* Ignore VCS.
* Handle SSP in pkgsrc.
* Put -std= in CFLAGS not CPPFLAGS.

--- configure.orig	2022-11-24 12:42:10.000000000 +0000
+++ configure
@@ -7709,7 +7709,7 @@ else $as_nop
 then :
 
 	case "$target_os" in #(
-  darwin*) :
+  nodarwin*) :
 
 	    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for real target cpu" >&5
 printf %s "checking for real target cpu... " >&6; }
@@ -10064,6 +10064,7 @@ fi
 	stack_protector=no
      ;; #(
   *) :
+	stack_protector=no
      ;;
 esac
     if test -z "${stack_protector+set}"
@@ -12017,6 +12018,10 @@ esac
 
 			ac_cv_func___builtin_setjmp=no
 		 ;; #(
+  interix*) :
+	LIBS="-lm $LIBS"
+	ac_cv_func_getpgrp_void=yes
+		 ;; #(
   *) :
      ;;
 esac
@@ -23748,7 +23753,9 @@ else
 #include <stdlib.h>
 #include <stddef.h>
 #ifndef alloca
-# ifdef __GNUC__
+# if defined(__NetBSD__) || defined(__FreeBSD__) || defined(__DragonFly__) || defined(__OpenBSD__)
+#   include <stdlib.h>
+# elif defined __GNUC__
 #  define alloca __builtin_alloca
 # elif defined _MSC_VER
 #  include <malloc.h>
@@ -28604,7 +28611,9 @@ fi
   interix*) :
     	: ${LDSHARED='$(CC) -shared'}
 			XLDFLAGS="$XLDFLAGS -Wl,-E"
+			DLDFLAGS="$DLDFLAGS "'-Wl,-h,$(.TARGET) -Wl,--image-base,$$(($$RANDOM %4096/2*262144+1342177280))'
 			LIBPATHFLAG=" -L%1\$-s"
+			RPATHFLAG=' -Wl,-R%1$-s'
 			rb_cv_dlopen=yes ;; #(
   freebsd*|dragonfly*) :
 
@@ -28775,7 +28784,7 @@ fi
       { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $flag is accepted for bundle" >&5
 printf %s "checking whether $flag is accepted for bundle... " >&6; }
       : > conftest.c
-      if ${LDSHARED/'$(CC)'/$CC} -o conftest.bundle $flag conftest.c >/dev/null 2>conftest.err &&
+      if $(echo ${LDSHARED} | sed -e "s/'$(CC)'/$CC/g") -o conftest.bundle $flag conftest.c >/dev/null 2>conftest.err &&
           test ! -s conftest.err
 then :
 
@@ -29929,7 +29938,7 @@ fi
 	 ;; #(
   freebsd*|dragonfly*) :
 
-	LIBRUBY_SO='lib$(RUBY_SO_NAME).$(SOEXT).$(MAJOR)$(MINOR)'
+	LIBRUBY_SO='lib$(RUBY_SO_NAME).$(SOEXT).$(MAJOR)$(MINOR)$(TEENY)'
 	LIBRUBY_SONAME='$(LIBRUBY_SO)'
 	if test "$rb_cv_binary_elf" != "yes"
 then :
@@ -30010,9 +30019,10 @@ esac
 	 ;; #(
   darwin*) :
 
+	RUBY_SO_NAME="${RUBY_SO_NAME}"'.$(RUBY_PROGRAM_VERSION)'
 	LIBRUBY_SO='lib$(RUBY_SO_NAME).$(SOEXT)'
-	LIBRUBY_SONAME='$(LIBRUBY_SO)'
-	LIBRUBY_ALIASES='lib$(RUBY_INSTALL_NAME).$(SOEXT)'
+	LIBRUBY_SONAME='lib$(RUBY_BASE_NAME).$(RUBY_API_VERSION).$(SOEXT)'
+	LIBRUBY_ALIASES='$(LIBRUBY_SONAME) lib$(RUBY_INSTALL_NAME).$(SOEXT)'
 	if test "$load_relative" = yes
 then :
 
@@ -30035,7 +30045,12 @@ fi
 	 ;; #(
   interix*) :
 
-	LIBRUBYARG_SHARED='-L. -L${libdir} -l$(RUBY_SO_NAME)'
+	SOLIBS='$(LIBS)'
+	LIBRUBY_SO='lib$(RUBY_SO_NAME).so.$(MAJOR)$(MINOR).$(TEENY)'
+	# link explicitly to 0x48000000
+	LIBRUBY_DLDFLAGS='-Wl,-h,lib$(RUBY_SO_NAME).so.$(MAJOR)$(MINOR) -Wl,--image-base,1207959552'
+	LIBRUBYARG_SHARED='-Wl,-R -Wl,${PREFIX}/lib} -L${libdir} -L. -l$(RUBY_SO_NAME)'
+	LIBRUBY_ALIASES='lib$(RUBY_SO_NAME).so.$(MAJOR)$(MINOR) lib$(RUBY_SO_NAME).so'
 	 ;; #(
   mingw*|cygwin*|mswin*) :
 
@@ -30228,7 +30243,7 @@ then :
 esac
     rpathflag=`IFS="$PATH_SEPARATOR"
         echo x "$rpathflag" |
-        sed "s/^x *//;s${IFS}"'%1\\$-s'"${IFS}${libprefix}${IFS}g;s${IFS}%s${IFS}${libprefix}${IFS}g"
+        sed "s/^x *//;s${IFS}"'%1\\$-s'"${IFS}${libprefix}${IFS}g;s${IFS}%s${IFS}${PREFIX}/lib${IFS}g"
     `
     LIBRUBY_RPATHFLAGS="$LIBRUBY_RPATHFLAGS${rpathflag}"
     LIBRUBYARG_SHARED="$LIBRUBY_RPATHFLAGS $LIBRUBYARG_SHARED"
@@ -33031,21 +33046,7 @@ which seems to be undefined.  Please mak
     "Makefile":F)
     tmpmk=confmk$$.tmp
     {
-	if test ${VCS+set}
-then :
-
-	    :
-
-elif git_dir=`$GIT --work-tree="$srcdir" --git-dir="$srcdir/.git" rev-parse --git-dir 2>/dev/null`
-then :
-
-	    VCS='$(GIT)'
-
-else $as_nop
-
 	    VCS='echo cannot'
-
-fi
 	case "$VCS" in #(
   '$(GIT)'|git) :
     VCSUP='$(VCS) pull $(GITPULLOPTIONS)' ;; #(
