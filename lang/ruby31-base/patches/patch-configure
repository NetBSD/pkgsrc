$NetBSD: patch-configure,v 1.2 2022/05/04 15:49:51 jperkin Exp $

* Avoid bash specific variable substitution.
* Adding Interix support.
* Ignore doxygen.
* Ignore VCS.
* Handle SSP in pkgsrc.
* Retain _XOPEN_SOURCE, fixes eventmachine.
* Fix argument for pthread_self() on NetBSD.
* Explictly stop display with color.

--- configure.orig	2022-04-12 11:11:17.000000000 +0000
+++ configure
@@ -3316,12 +3316,12 @@ case "$target_cpu-$target_os" in #(
         target_cpu=arm64
         case "$target_vendor" in #(
   unknown) :
-    target_vendor=apple target=${target/-unknown-/-apple-} ;; #(
+    target_vendor=apple target=$(echo ${target} | sed -e 's/-unknown-/-apple-/g') ;; #(
   *) :
      ;;
 esac
-        target="${target/aarch64/arm64}"
-        target_alias="${target_alias/aarch64/arm64}"
+        target="$(echo ${target} | sed -e 's/aarch64/arm64/g')"
+        target_alias="$(echo ${target_alias} | sed -e 's/aarch64/arm64/g')"
      ;; #(
   *) :
      ;;
@@ -8441,7 +8441,7 @@ else
     if test x"$target_alias" = x; then :
 
 	case "$target_os" in #(
-  darwin*) :
+  nodarwin*) :
 
 	    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for real target cpu" >&5
 $as_echo_n "checking for real target cpu... " >&6; }
@@ -10262,6 +10262,7 @@ fi
 	stack_protector=no
      ;; #(
   *) :
+	stack_protector=no
      ;;
 esac
     if test -z "${stack_protector+set}"; then :
@@ -11981,18 +11982,6 @@ fi
      CPPFLAGS="$CPPFLAGS ${rb_opt}" ;;
 esac
 	done
-		    # _XOPEN_SOURCE should not be defined for C++ on Solaris.
-		    # RUBY_APPEND_OPTIONS(CXXFLAGS)
-	for rb_opt in -U_XOPEN_SOURCE; do
-	case " ${CXXFLAGS-} " in #(
-  *" ${rb_opt} "*) :
-     ;; #(
-  '  ') :
-     CXXFLAGS="${rb_opt}" ;; #(
-  *) :
-     CXXFLAGS="$CXXFLAGS ${rb_opt}" ;;
-esac
-	done
 
 fi
 
@@ -12226,6 +12215,10 @@ esac
 
 			ac_cv_func___builtin_setjmp=no
 		 ;; #(
+  interix*) :
+	LIBS="-lm $LIBS"
+	ac_cv_func_getpgrp_void=yes
+		 ;; #(
   *) :
      ;;
 esac
@@ -24059,6 +24052,8 @@ else
 # ifdef _MSC_VER
 #  include <malloc.h>
 #  define alloca _alloca
+# elif defined(__NetBSD__) || defined(__FreeBSD__) || defined(__DragonFly__) || defined(__OpenBSD__)
+#   include <stdlib.h>
 # else
 #  ifdef HAVE_ALLOCA_H
 #   include <alloca.h>
@@ -29499,7 +29494,9 @@ fi
   interix*) :
     	: ${LDSHARED='$(CC) -shared'}
 			XLDFLAGS="$XLDFLAGS -Wl,-E"
+			DLDFLAGS="$DLDFLAGS "'-Wl,-h,$(.TARGET) -Wl,--image-base,$$(($$RANDOM %4096/2*262144+1342177280))'
 			LIBPATHFLAG=" -L%1\$-s"
+			RPATHFLAG=' -Wl,-R%1$-s'
 			rb_cv_dlopen=yes ;; #(
   freebsd*|dragonfly*) :
 
@@ -30700,7 +30697,7 @@ fi
 	 ;; #(
   freebsd*|dragonfly*) :
 
-	LIBRUBY_SO='lib$(RUBY_SO_NAME).$(SOEXT).$(MAJOR)$(MINOR)'
+	LIBRUBY_SO='lib$(RUBY_SO_NAME).$(SOEXT).$(MAJOR)$(MINOR)$(TEENY)'
 	LIBRUBY_SONAME='$(LIBRUBY_SO)'
 	if test "$rb_cv_binary_elf" != "yes" ; then :
 
@@ -30795,9 +30792,10 @@ esac
 	 ;; #(
   darwin*) :
 
+	RUBY_SO_NAME="${RUBY_SO_NAME}"'.$(RUBY_PROGRAM_VERSION)'
 	LIBRUBY_SO='lib$(RUBY_SO_NAME).$(SOEXT)'
-	LIBRUBY_SONAME='$(LIBRUBY_SO)'
-	LIBRUBY_ALIASES='lib$(RUBY_INSTALL_NAME).$(SOEXT)'
+	LIBRUBY_SONAME='lib$(RUBY_BASE_NAME).$(RUBY_API_VERSION).$(SOEXT)'
+	LIBRUBY_ALIASES='$(LIBRUBY_SONAME) lib$(RUBY_INSTALL_NAME).$(SOEXT)'
 	if test "$load_relative" = yes; then :
 
 	    libprefix="@executable_path/../${libdir_basename}"
@@ -30818,7 +30816,12 @@ fi
 	 ;; #(
   interix*) :
 
-	LIBRUBYARG_SHARED='-L. -L${libdir} -l$(RUBY_SO_NAME)'
+	SOLIBS='$(LIBS)'
+	LIBRUBY_SO='lib$(RUBY_SO_NAME).so.$(MAJOR)$(MINOR).$(TEENY)'
+	# link explicitly to 0x48000000
+	LIBRUBY_DLDFLAGS='-Wl,-h,lib$(RUBY_SO_NAME).so.$(MAJOR)$(MINOR) -Wl,--image-base,1207959552'
+	LIBRUBYARG_SHARED='-Wl,-R -Wl,${PREFIX}/lib} -L${libdir} -L. -l$(RUBY_SO_NAME)'
+	LIBRUBY_ALIASES='lib$(RUBY_SO_NAME).so.$(MAJOR)$(MINOR) lib$(RUBY_SO_NAME).so'
 	 ;; #(
   cygwin*|msys*|mingw*|mswin*) :
 
@@ -31000,7 +31003,7 @@ if test "$enable_rpath" = yes; then :
 esac
     rpathflag=`IFS="$PATH_SEPARATOR"
         echo x "$rpathflag" |
-        sed "s/^x *//;s${IFS}"'%1\\$-s'"${IFS}${libprefix}${IFS}g;s${IFS}%s${IFS}${libprefix}${IFS}g"
+        sed "s/^x *//;s${IFS}"'%1\\$-s'"${IFS}${libprefix}${IFS}g;s${IFS}%s${IFS}${PREFIX}/lib${IFS}g"
     `
     LIBRUBY_RPATHFLAGS="$LIBRUBY_RPATHFLAGS${rpathflag}"
     LIBRUBYARG_SHARED="$LIBRUBY_RPATHFLAGS $LIBRUBYARG_SHARED"
@@ -32550,7 +32553,7 @@ guard=INCLUDE_RUBY_CONFIG_H
   if test "x$CONFIGURE_TTY" = xyes; then :
   color=--color
 else
-  color=
+  color=--color=never
 fi
   exec ${SHELL} ${tooldir}/ifchange $color "${config_h}" -
 ) >&6 || as_fn_error $? "failed to create ${config_h}" "$LINENO" 5
@@ -33773,19 +33776,7 @@ which seems to be undefined.  Please mak
     "Makefile":F)
     tmpmk=confmk$$.tmp
     {
-	if test ${VCS+set}; then :
-
-	    :
-
-elif git_dir=`$GIT --work-tree="$srcdir" --git-dir="$srcdir/.git" rev-parse --git-dir 2>/dev/null`; then :
-
-	    VCS='$(GIT)'
-
-else
-
 	    VCS='echo cannot'
-
-fi
 	case "$VCS" in #(
   '$(GIT)'|git) :
     VCSUP='$(VCS) pull --rebase $(GITPULLOPTIONS)' ;; #(
