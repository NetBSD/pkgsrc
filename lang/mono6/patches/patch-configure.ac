$NetBSD: patch-configure.ac,v 1.2 2019/10/09 22:46:04 maya Exp $

Add netbsd support
https://github.com/mono/mono/pull/15938

Disable libgc in cases it has build issues (netbsd/aarch64, solaris)

--- configure.ac.orig	2019-09-19 07:53:55.000000000 +0000
+++ configure.ac
@@ -202,6 +202,12 @@ case "$host" in
 		libgc_threads=pthreads
 		with_sigaltstack=no
 		use_sigposix=yes
+		case "$host" in
+		aarch64-*)
+			support_boehm=no
+			with_gc=sgen
+			;;
+		esac
 		with_sgen_default_concurrent=yes
 		;;
 	*-*-kfreebsd*-gnu)
@@ -394,6 +400,8 @@ case "$host" in
 		has_dtrace=yes
 		use_sigposix=yes
 		enable_solaris_tar_check=yes
+		support_boehm=no
+		with_gc=sgen
 		;;
 	*-*-darwin*)
 		parallel_mark="Disabled_Currently_Hangs_On_MacOSX"
@@ -4155,10 +4163,10 @@ LIBC="libc.so.6"
 INTL="libc.so.6"
 SQLITE="libsqlite.so.0"
 SQLITE3="libsqlite3.so.0"
-X11="libX11.so"
-GDKX11="libgdk-x11-2.0.so.0"
-GTKX11="libgtk-x11-2.0.so.0"
-XINERAMA="libXinerama.so.1"
+X11="@X11BASE@/lib/libX11.so"
+GDKX11="@PREFIX@/lib/libgdk-x11-2.0.so.0"
+GTKX11="@PREFIX@/lib/libgtk-x11-2.0.so.0"
+XINERAMA="@X11BASE@/lib/libXinerama.so"
 
 sizeof_register="SIZEOF_VOID_P"

@@ -6309,6 +6317,22 @@ elif test x$platform_android = xyes; the
 	MONO_NATIVE_PLATFORM=android
 
 	MONO_NATIVE_PLATFORM_TYPE="MONO_NATIVE_PLATFORM_TYPE_ANDROID"
+elif case $host_os in netbsd*) true;; *) false;; esac; then
+	mono_native_text="NetBSD"
+	MONO_NATIVE_CC=$CC
+	MONO_NATIVE_CXX=$CXX
+	MONO_NATIVE_CPPFLAGS=$CPPFLAGS
+	MONO_NATIVE_CXXFLAGS=$CXXFLAGS
+	MONO_NATIVE_CFLAGS=$CFLAGS
+	MONO_NATIVE_LDFLAGS=$LDFLAGS
+
+	mono_native=yes
+	mono_native_compat=no
+	MONO_NATIVE_PLATFORM=netbsd
+	AC_MSG_CHECKING([Mono.Native support])
+	AC_MSG_RESULT(netbsd)
+
+	MONO_NATIVE_PLATFORM_TYPE="MONO_NATIVE_PLATFORM_TYPE_NETBSD"
 else
 	mono_native=no
 	mono_native_text="no"
@@ -6351,6 +6375,7 @@ AM_CONDITIONAL(MONO_NATIVE_PLATFORM_LINU
 AM_CONDITIONAL(MONO_NATIVE_PLATFORM_AIX, test x$MONO_NATIVE_PLATFORM = xaix)
 AM_CONDITIONAL(MONO_NATIVE_PLATFORM_ANDROID, test x$MONO_NATIVE_PLATFORM = xandroid)
 AM_CONDITIONAL(MONO_NATIVE_PLATFORM_FREEBSD, test x$MONO_NATIVE_PLATFORM = xfreebsd)
+AM_CONDITIONAL(MONO_NATIVE_PLATFORM_NETBSD, test x$MONO_NATIVE_PLATFORM = xnetbsd)
 
 MONO_NATIVE_PLATFORM_TYPE_COMPAT="$MONO_NATIVE_PLATFORM_TYPE | MONO_NATIVE_PLATFORM_TYPE_COMPAT"
 MONO_NATIVE_PLATFORM_TYPE_UNIFIED="$MONO_NATIVE_PLATFORM_TYPE | MONO_NATIVE_PLATFORM_TYPE_UNIFIED"
