$NetBSD: patch-bin_gng,v 1.2 2022/12/27 18:28:34 abs Exp $

Use pkgsrc paths, and update for python 3.x

--- bin/gng.orig	2021-03-29 06:32:44.000000000 +0000
+++ bin/gng
@@ -1,24 +1,15 @@
 #!/usr/bin/env bash
+
+PREFIX=@PREFIX@
+
 readonly SAVED_OPTS="$(
   shopt -po
   shopt -p
 )"
-SOURCE="${BASH_SOURCE[0]}"
-while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
-  TARGET="$(readlink "$SOURCE")"
-  if [[ $TARGET == /* ]]; then
-    SOURCE="$TARGET"
-  else
-    SELF_DIR="$(dirname "$SOURCE")"
-    SOURCE="$SELF_DIR/$TARGET" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
-  fi
-done
-SELF_DIR="$(cd -P "$(dirname "$SOURCE")" >/dev/null 2>&1 && pwd)"
-readonly SELF_DIR
 
 # shellcheck disable=SC1090
-source "${SELF_DIR}/../lib/common.sh" || {
-  echo "Failed to load common.sh in ${SELF_DIR}"
+source "${PREFIX}/share/gng/common.sh" || {
+  echo "Failed to load ${PREFIX}/share/gng/common.sh"
   exit 1
 }
 # DEFAULTS may be overridden by calling environment.
@@ -78,7 +69,7 @@ function __install_gw() {
     info "Installing Gradle Wrapper in ${dir}. (version=${version}, distributionType=${type}, mirrorUrl=${mirrorUrl:-<Not Specified>})"
 
     #Copy the embedded Gradle Wrapper
-    local srcDir="${SELF_DIR}/.."
+    local srcDir="${PREFIX}/share/gng"
     cp -f "${srcDir}/gradle/gng.cfg" "${dir}/gradle/"
     cp -f "${srcDir}/gradle/gradlew" "${dir}/"
     cp -f "${srcDir}/gradle/gradlew.bat" "${dir}/"
@@ -182,7 +173,7 @@ function bootstrap() {
   if [[ "${_arg_version}" == "latest" ]]; then
     info "Fetching the latest Gradle version from services.gradle.org"
     _arg_version=$(curl -m 60 -sSL "https://services.gradle.org/versions/current" |
-      python -c "import json,sys;obj=json.load(sys.stdin);print obj['version'];") || die "Failed to fetch the version info!"
+      python -c "import json,sys;obj=json.load(sys.stdin);print(obj['version']);") || die "Failed to fetch the version info!"
     info "The latest Gradle version is ${_arg_version}"
   fi
   __install_gw "${_arg_version}" "${_arg_distribution_type}" "${_arg_mirror:-}" "${_arg_destination_dir}"
