$NetBSD: patch-src_Makefile,v 1.2 2021/08/16 01:29:37 dholland Exp $

Append to CFLAGS and LDFLAGS.

Fix the makefile to not choke on parallel builds.

--- src/Makefile.orig	2018-04-10 19:44:08.000000000 +0000
+++ src/Makefile
@@ -119,8 +119,10 @@ SYS_LDFLAGS := $(shell echo $(SYS_LDFLAG
 OPTIONS = -O3 -Wall
 endif
 
-CFLAGS = $(OPTIONS) $(SYS_CFLAGS)  $(EXTRA_CFLAGS) $(CONFIG)
-LDFLAGS =           $(SYS_LDFLAGS) $(EXTRA_LDFLAGS) -lm
+# pkgsrc presets those variables, so use '+=' to append to them
+# flags for debugging or optimisation may be supplied from the pkgsrc Makefile
+CFLAGS += $(SYS_CFLAGS)  $(EXTRA_CFLAGS) $(CONFIG)
+LDFLAGS += $(SYS_LDFLAGS) $(EXTRA_LDFLAGS) -lm
 
 
 SRCS =	main.c		\
@@ -218,7 +220,14 @@ GRAPHICS_DIR = ../graphics
 # build targets
 # -----------------------------------------------------------------------------
 
-all: $(AUTOCONF) libgame_dir game_em_dir game_sp_dir game_mm_dir $(PROGNAME) graphics_dir
+# since gmake has no .WAIT the only option is to serialize fully
+#all: $(AUTOCONF) libgame_dir game_em_dir game_sp_dir game_mm_dir $(PROGNAME) graphics_dir
+all:
+	$(MAKE) $(AUTOCONF)
+	$(MAKE) libgame_dir
+	$(MAKE) game_em_dir game_sp_dir game_mm_dir
+	$(MAKE) $(PROGNAME)
+	$(MAKE)  graphics_dir
 
 $(PROGNAME): $(RNDLIBS) $(TIMESTAMP_FILE) $(OBJS) $(ICON)
 	$(CC) $(PROFILING) $(OBJS) $(ICON) $(RNDLIBS) $(LDFLAGS) -o $(PROGNAME)
