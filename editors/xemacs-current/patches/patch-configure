$NetBSD: patch-configure,v 1.3 2019/11/27 14:48:36 hauke Exp $

Add POSIX syntax for passing ld(1) options through the compiler 
front end

Remove bashism

Was patch-ab

--- configure.orig	2013-08-21 17:45:50.000000000 +0000
+++ configure
@@ -9194,10 +9194,13 @@ case "$opsys" in
    $as_echo "#define __EXTENSIONS__ 1" >>confdefs.h
 
       if test "$os_release" -ge 505; then
-     $as_echo "#define _XOPEN_SOURCE 500" >>confdefs.h
-
      $as_echo "#define _XOPEN_SOURCE_EXTENDED 1" >>confdefs.h
 
+     $as_echo "#if __STDC_VERSION__ - 0 < 199901L" >>confdefs.h
+     $as_echo "#define _XOPEN_SOURCE 500" >>confdefs.h
+     $as_echo "#else" >>confdefs.h
+     $as_echo "#define _XOPEN_SOURCE 600" >>confdefs.h
+     $as_echo "#endif" >>confdefs.h
    fi ;;
   linux)
     $as_echo "#define _POSIX_C_SOURCE 199506L" >>confdefs.h
@@ -10107,7 +10110,7 @@ $as_echo_n "checking for runtime librari
     linux* | irix*) dash_r="-rpath " ;;
     *)
       dash_r=""
-      for try_dash_r in "-R" "-R " "-rpath "; do
+      for try_dash_r in "-Wl,R" "-R" "-R " "-rpath "; do
         xe_check_libs="${try_dash_r}/no/such/file-or-directory"
 
 if test "$GCC" = "yes"; then
@@ -21819,7 +21822,7 @@ fi
 if test "$have_vdb_mach" = yes ; then
   echo "  Using mach exception mechanism as vdb fault handler."
 fi
-if test "$have_vdb_fake" = yes && test "$with_vdb" == fake; then
+if test "$have_vdb_fake" = yes && test "$with_vdb" = fake; then
   echo "  Virtual dirty bit write barrier manually disabled."
 fi
 test "$with_pdump" = yes && echo "  Using the new portable dumper."
