$NetBSD: patch-configure,v 1.8 2019/11/06 09:17:29 leot Exp $

- Builtin krb5-config in platforms such as solaris do not support
  the gssapi option, and need an explicit -lgss
- On Darwin, do not append custom CFLAGS.
- Do not strip debug flags.
- Support Minix.
- Avoid unportable `==' test(1) operator.

--- configure.orig	2019-11-06 06:38:18.000000000 +0000
+++ configure
@@ -3806,6 +3806,7 @@ $as_echo "$as_me: $xc_bad_var_msg librar
         ;;
     esac
   done
+  xc_bad_var_cflags=no
   if test $xc_bad_var_cflags = yes; then
     { $as_echo "$as_me:${as_lineno-$LINENO}: using CFLAGS: $CFLAGS" >&5
 $as_echo "$as_me: using CFLAGS: $CFLAGS" >&6;}
@@ -7939,7 +7940,7 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
-  bitrig* | darwin* | dragonfly* | freebsd* | netbsd* | openbsd*)
+  bitrig* | darwin* | dragonfly* | freebsd* | minix* | netbsd* | openbsd*)
     # This has been around since 386BSD, at least.  Likely further.
     if test -x /sbin/sysctl; then
       lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
@@ -8405,12 +8406,8 @@ linux* | k*bsd*-gnu | kopensolaris*-gnu 
   lt_cv_deplibs_check_method=pass_all
   ;;
 
-netbsd* | netbsdelf*-gnu)
-  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
-    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|_pic\.a)$'
-  else
-    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so|_pic\.a)$'
-  fi
+netbsd* | netbsdelf*-gnu | minix*)
+  lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so|_pic\.a)$'
   ;;
 
 newos6*)
@@ -12617,14 +12614,13 @@ _LT_EOF
       fi
       ;;
 
-    netbsd* | netbsdelf*-gnu)
-      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
-	archive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
-	wlarc=
-      else
-	archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
-	archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
-      fi
+    netbsd* | netbsdelf*-gnu | minix*)
+      archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+      archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      output_verbose_link_cmd=func_echo_all
       ;;
 
     solaris*)
@@ -13307,15 +13303,13 @@ $as_echo "$lt_cv_irix_exported_symbol" >
       esac
       ;;
 
-    netbsd* | netbsdelf*-gnu)
-      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
-	archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
-      else
-	archive_cmds='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
-      fi
-      hardcode_libdir_flag_spec='-R$libdir'
+    netbsd* | netbsdelf*-gnu | minix*)
+      archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+      archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
       hardcode_direct=yes
       hardcode_shlibpath_var=no
+      output_verbose_link_cmd=func_echo_all
       ;;
 
     newsos6)
@@ -14421,6 +14415,18 @@ fi
   dynamic_linker='GNU/Linux ld.so'
   ;;
 
+minix*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  dynamic_linker='Minix ld.elf_so'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  ;;
+
 netbsdelf*-gnu)
   version_type=linux
   need_lib_prefix=no
@@ -16989,7 +16995,7 @@ squeeze() {
 
 
       #
-  if test "$compiler_id" != "unknown"; then
+  if false; then
     #
     if test "$compiler_id" = "GNU_C" ||
       test "$compiler_id" = "CLANG"; then
@@ -17317,13 +17323,6 @@ $as_echo_n "checking if compiler accepts
       tmp_options="$flags_dbg_off"
     fi
     #
-    if test "$flags_prefer_cppflags" = "yes"; then
-      CPPFLAGS="$tmp_CPPFLAGS $tmp_options"
-      CFLAGS="$tmp_CFLAGS"
-    else
-      CPPFLAGS="$tmp_CPPFLAGS"
-      CFLAGS="$tmp_CFLAGS $tmp_options"
-    fi
     squeeze CPPFLAGS
     squeeze CFLAGS
 
@@ -18991,7 +18990,7 @@ $as_echo "no" >&6; }
   tst_cflags="no"
   case $host_os in
     darwin*)
-      tst_cflags="yes"
+      tst_cflags="no"
       ;;
   esac
 
@@ -21988,7 +21987,11 @@ $as_echo "yes" >&6; }
      if test -n "$host_alias" -a -f "$GSSAPI_ROOT/bin/$host_alias-krb5-config"; then
         GSSAPI_INCS=`$GSSAPI_ROOT/bin/$host_alias-krb5-config --cflags gssapi`
      elif test -f "$KRB5CONFIG"; then
-        GSSAPI_INCS=`$KRB5CONFIG --cflags gssapi`
+        if `$KRB5CONFIG --cflags gssapi` 2>&1 | grep "Unknown option" >/dev/null; then
+           GSSAPI_INCS=`$KRB5CONFIG --cflags`
+        else
+           GSSAPI_INCS=`$KRB5CONFIG --cflags gssapi`
+        fi
      elif test "$GSSAPI_ROOT" != "yes"; then
         GSSAPI_INCS="-I$GSSAPI_ROOT/include"
      fi
@@ -22161,7 +22164,7 @@ $as_echo "#define HAVE_GSSAPI 1" >>confd
         LIBS="-lgss $LIBS"
         ;;
      *)
-        LIBS="-lgssapi $LIBS"
+        LIBS="-lgssapi -lkrb5 $LIBS"
         ;;
      esac
   fi
@@ -42524,7 +42527,7 @@ $as_echo_n "checking whether ESNI suppor
     ESNI_ENABLED=0
   ESNI_SUPPORT=''
 
-      if test "x$OPENSSL_ENABLED" == "x1"; then
+      if test "x$OPENSSL_ENABLED" = "x1"; then
     for ac_func in SSL_get_esni_status
 do :
   ac_fn_c_check_func "$LINENO" "SSL_get_esni_status" "ac_cv_func_SSL_get_esni_status"
@@ -42540,7 +42543,7 @@ done
 
     fi
 
-    if test "x$ESNI_ENABLED" == "x1"; then
+    if test "x$ESNI_ENABLED" = "x1"; then
 
 $as_echo "#define USE_ESNI 1" >>confdefs.h
 
